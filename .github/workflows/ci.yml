name: Breeze CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: "*"

jobs:
  check_format:
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:0.36.1
    steps:
      - uses: actions/checkout@v1
      - name: Install shards
        run: shards install
      - name: Format
        run: crystal tool format --check
      - name: Lint
        run: ./bin/ameba
  specs:
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:0.36.1
    env:
      LUCKY_ENV: test
      DB_HOST: postgres
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get -yqq install libpq-dev postgresql-client-12
      - name: Cache Crystal
        uses: actions/cache@v1
        with:
          path: ~/.cache/crystal
          key: ${{ runner.os }}-crystal
      - name: Install browser
        run: apt-get -yqq install chromium-browser
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: "12.x"
      - name: Cache node modules
        uses: actions/cache@v2.1.5
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Install yarn"
        run: npm install -g yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Set up Yarn cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn--${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn--
      - name: Install shards
        run: shards install
      - name: Install Lucky CLI
        run: |
          crystal build lib/lucky_cli/src/lucky.cr --no-debug --release
          cp lucky /usr/local/bin
      - name: Run tests
        run: crystal spec
